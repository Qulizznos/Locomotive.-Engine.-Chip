@name L.E.C Control Stand Composite (EMD) BETA
#WARNING: THIS CONTROL STAND IS IN BETA!
#BUGS AND ISSUES WILL OCCUR!
#IF YOU ENCOUNTER A BUG! PLEASE REPORT IT TO QULIZZNOS!

#WIRE INSTRUCTIONS:
    #1. Wire Active (And Horn) To Pod Controller
    #2. Wire the Rest from Chip_CPUusage to Throttle to The LEC CHIP
#Enjoy!
#

@model models/rlc_delta_lua/cstands/emd_composite_console.mdl
#
#########################################################################################################
@inputs [Active Horn Chip_CPUusage Chip_E2Ops Chip_EngineStatus E2_Downforce E2_DownforceMax Handbrake HighIdling Notch]:number
@inputs [NotchXThrottle Reverser MPH MPH_MAX Throttle]:number
#########################################################################################################
@persist [SELF BRAKES AMP MPHS Throttler OPSS]:entity
@persist [BonesSafe]:number
@persist [IDX_BONE_AFM IDX_BONE_BRAKE IDX_BONE_OPS IDX_BONE_THROTTLE_WHEEL IDX_BONE_REVERSER IDX_BONE_SELECTOR IDX_HORN]:number
@persist [IDX_BONE_SPEED_MPH IDX_BONE_SPEED_MPH_MAX IDX_BONE_THROTTLE IDX_BONE_THROTTLE_RELATIVE]:number
@persist [IDX_HOLO_DOWNFORCE]:number
@persist [IDX_SOUND_REVERSER_LEVER]:number
@persist [IDX_SOUND_HANDBRAKE IDX_SOUND_SELECTOR_LEVER]:number
@persist [OFFSET_BONE_NEEDLES]:number
@persist [SCALAR_BONE_OPS SCALAR_MPH_TO_DEG]:number
@persist [CFG_Sound_Handbrake CFG_Sound_Reverser_Engaged CFG_Sound_Reverser_Neutral CFG_Sound_Selector_Notch]:string
@persist [State_Downforce_Percent]:number
###########################################################################################################################################
@trigger Active Chip_CPUusage Chip_E2Ops Chip_EngineStatus Handbrake HighIdling Notch NotchXThrottle Reverser MPH MPH_MAX Throttle 


if(Horn ==1){
SELF:setBoneAngRelative(4, ang(0, 0, -15)) 
}else{
SELF:setBoneAngRelative(4, ang(0, 0, 0)) 
} 

if (BonesSafe & inputClk()) {
    local Trigger = inputClkName()
    switch (Trigger) {
        case "Active",
            SELF:propNotSolid(Active) # Hides the overlay/halo stuff when in the seat.
            break
        case "Chip_CPUusage",
            AMP:setBoneAngRelative(IDX_BONE_AFM, ang(37-min(max(0, Chip_CPUusage/1.5), 400), 0, 0))
            break
        case "Chip_EngineStatus",
            SELF:setBodygroup(14, Chip_EngineStatus == 1 | Chip_EngineStatus == 2)
            break
        case "Handbrake",
            BRAKES:setBoneAngRelative(IDX_BONE_BRAKE, ang(Handbrake * 140, 0, 0))
            soundPlay(IDX_SOUND_HANDBRAKE, 2, CFG_Sound_Handbrake)
            break
        case "HighIdling",
            SELF:setBodygroup(13, HighIdling)
            break
        case "Notch",
            SELF:setBoneAngRelative(IDX_BONE_THROTTLE_WHEEL, ang(Notch*-12, 0, 0))
            SELF:setBoneAngRelative(IDX_BONE_SELECTOR, ang(Notch*-9.5, 0, 0))
            soundPlay(IDX_SOUND_SELECTOR_LEVER, 2, CFG_Sound_Selector_Notch)
            break
        case "NotchXThrottle",
            Throttler:setBoneAngRelative(IDX_BONE_THROTTLE_RELATIVE, ang(NotchXThrottle*-2 + OFFSET_BONE_NEEDLES, 0, 0))
            break
        case "Chip_E2Ops",
            OPSS:setBoneAngRelative(IDX_BONE_OPS, ang(3-Chip_E2Ops * SCALAR_BONE_OPS, 0, 0))
            break
        case "Reverser",
            SELF:setBoneAngRelative(IDX_BONE_REVERSER, ang(Reverser*20, 0, 0))
            soundPlay(IDX_SOUND_REVERSER_LEVER, 2, Reverser == 0 ? CFG_Sound_Reverser_Neutral : CFG_Sound_Reverser_Engaged)
            break
        case "MPH",
            MPHS:setBoneAngRelative(IDX_BONE_SPEED_MPH, ang(OFFSET_BONE_NEEDLES - (min(max(0, MPH - 2), 90) * SCALAR_MPH_TO_DEG), 0, 0))
            break
        case "MPH_MAX",
            MPHS:setBoneAngRelative(IDX_BONE_SPEED_MPH_MAX, ang(OFFSET_BONE_NEEDLES - (min(max(0, MPH - 2), 90) * SCALAR_MPH_TO_DEG), 0, 0))
            break
        case "Throttle",
            Throttler:setBoneAngRelative(IDX_BONE_THROTTLE, ang(Throttle*-2 + OFFSET_BONE_NEEDLES, 0, 0))
            break
    }
}

elseif (clk()) {
    interval(4000 - (Active * 3000))
    State_Downforce_Percent = ceil(100 * (E2_Downforce / (max(1, E2_DownforceMax))))
    holoBodygroup(IDX_HOLO_DOWNFORCE, 1, State_Downforce_Percent == 100 ? 1 : 16)
    holoBodygroup(IDX_HOLO_DOWNFORCE, 2, State_Downforce_Percent >= 10 ? floor(State_Downforce_Percent/10) : 16)
    holoBodygroup(IDX_HOLO_DOWNFORCE, 3, State_Downforce_Percent % 10)
}

elseif (first() | dupefinished()) {
   # ===============================
    # ===============================
    # Config block
        CFG_Sound_Reverser_Neutral = "rlc_delta/cstands/reverser/rev_rev_cntr.wav"
        CFG_Sound_Reverser_Engaged = "rlc_delta/cstands/reverser/rev_fwd_cntr.wav"
        CFG_Sound_Selector_Notch = "rlc_delta/cstands/throttle/u1.wav"
        CFG_Sound_Handbrake = "rlc_delta/cstands/26l_air/tb_lever.wav"
    # ===============================
    # ===============================
    BonesSafe = 0
    State_Downforce_Percent = 1

    OFFSET_BONE_NEEDLES = -60 # degrees.
    OFFSET_BONE_NEEDLES2 = 0 # degrees.
    SCALAR_BONE_OPS = 0.0624
    SCALAR_MPH_TO_DEG = 2.8
    
    #---------------------------------------#

#Holo and Bodygroup Area
    SELF = entity()
    BRAKES = holoEntity(50)
    OPSS= holoEntity(3)
    Throttler = holoEntity(4)
    MPHS = holoEntity(5)
    AMP = holoEntity(6)
      SELF:setBodygroup(1, 1) # Reverser lever
    SELF:setBodygroup(3, 1) # Selector
    #HOLO
A = 50
    holoCreate(A, 
    SELF:toWorld(vec(4.57,1,38.5)),
    vec(1,1,1),
    SELF:toWorld(ang(0,20,0)))
    holoColor(A, vec4(255,255,255,255))
    holoModel(A, "models/rlc_delta_lua/cstands/26L_automatic.mdl")
    holoParent(A, SELF)
    holoMaterial(A,"")
     BRAKES = holoEntity(50)   

    holoCreate(2, 
    SELF:toWorld(vec(4.57,1,28.5)),
    vec(1,1,1),
    SELF:toWorld(ang(0,20,0)))
    holoColor(2, vec4(255,255,255,255))
    holoModel(2, "models/rlc_delta_lua/cstands/26L_independent.mdl")
    holoParent(2, SELF)
    holoMaterial(2,"")

    holoCreate(3, 
    SELF:toWorld(vec(-4.15,12.3,42.25)),
    vec(0.75),
    SELF:toWorld(ang(90,0,0)))
    holoColor(3, vec4(255,255,255,255))
    holoModel(3, "models/gsgtrainprops/parts/cab/anim/gauge_air_afm_anim.mdl")
    holoParent(3, SELF)
    holoMaterial(3,"")
    OPSS= holoEntity(3)

    holoCreate(4, 
    SELF:toWorld(vec(-4.15,16.55,42.25)),
    vec(0.75),
    SELF:toWorld(ang(90,0,0)))
    holoColor(4, vec4(255,255,255,255))
    holoModel(4, "models/gsgtrainprops/parts/cab/anim/gauge_air_anim.mdl")
    holoParent(4, SELF)
    holoMaterial(4,"")
    holoEntity(4):setSubMaterial(4, "models/gsgtrainprops/cab/speedo_black") # Paint color
    Throttler = holoEntity(4)
    

    holoCreate(5, 
    SELF:toWorld(vec(-4.15,20.8,42.25)),
    vec(0.75),
    SELF:toWorld(ang(90,0,0)))
    holoColor(5, vec4(255,255,255,255))
    holoModel(5, "models/gsgtrainprops/parts/cab/anim/gauge_air_anim.mdl")
    holoEntity(5):setSubMaterial(4, "models/gsgtrainprops/cab/speedo_black_freight")
    holoParent(5, SELF)
    holoMaterial(5,"")
    MPHS = holoEntity(5)
    
    holoCreate(6, 
    SELF:toWorld(vec(-4.15,26.3,42.5)),
    vec(0.75),
    SELF:toWorld(ang(90,0,0)))
    holoColor(6, vec4(255,255,255,255))
    holoModel(6, "models/gsgtrainprops/parts/cab/anim/gauge_load_arc_late_anim.mdl")
    holoParent(6, SELF)
    holoMaterial(6,"")
    AMP = holoEntity(6)
    
     # "power/throttle" text on throttle gauge
    holoCreate(8)
    holoModel(8, "plane")
    holoColor(8, vec(255))
    holoMaterial(8, "anytrains/labels/labels_a")
    holoPos(8, SELF:toWorld(vec(-4.05,16.55,41.25)))
    holoAng(8, SELF:toWorld(ang(90, -90, -90)))
    holoParent(8, SELF)
    holoScale(8, vec(0.125))
    holoClipEnabled(8, 1, 1)
    holoClip(8, 1, vec(-0.4, 0, 0), vec(-1, 0, 0), 0)
  
    # Downforce holo
    IDX_HOLO_DOWNFORCE = 9
    holoCreate(IDX_HOLO_DOWNFORCE)
    holoModel(IDX_HOLO_DOWNFORCE, "models/magtrainslocos/numplates/numplate_rs3_rs_3d.mdl")
    holoPos(IDX_HOLO_DOWNFORCE, SELF:toWorld(vec(-4.06,20.8,41.25)))
    holoAng(IDX_HOLO_DOWNFORCE, SELF:toWorld(ang(90, 0, 0)))
    holoScale(IDX_HOLO_DOWNFORCE, vec(0.05))
    holoBodygroup(IDX_HOLO_DOWNFORCE, 5, 2)
    holoBodygroup(IDX_HOLO_DOWNFORCE, 4, 2)
    holoParent(IDX_HOLO_DOWNFORCE, SELF)
    
    #STAND
IDX_BONE_REVERSER = 1
IDX_BONE_SELECTOR = 13
IDX_BONE_THROTTLE_WHEEL = 15
IDX_HORN = SELF:boneIndex("horn_lever")

IDX_SOUND_REVERSER_LEVER = 1
IDX_SOUND_SELECTOR_LEVER = 13

#BRAKE
IDX_BONE_BRAKE = BRAKES:boneIndex("trainbrake")
IDX_SOUND_HANDBRAKE = BRAKES:boneIndex("trainbrake")
#AMP 
IDX_BONE_AFM = AMP:boneIndex("arc_load_needle_bone")

#OPS
IDX_BONE_OPS = OPSS:boneIndex("needle_afm_bone")

#Throttle
IDX_BONE_THROTTLE = Throttler:boneIndex("needle_white_bone")
IDX_BONE_THROTTLE_RELATIVE = Throttler:boneIndex("needle_red_bone")

#Throttle
IDX_BONE_SPEED_MPH = MPHS:boneIndex("needle_white_bone")
IDX_BONE_SPEED_MPH_MAX = MPHS:boneIndex("needle_red_bone")
    #Don't Touch, Bonecore Timer!.
    timer("initbonecore", 10000)
}

elseif (clkName() == "initbonecore") {
    interval(4000 - (Active * 3000))
    AMP:setBoneAngRelative(IDX_BONE_AFM, ang(37-Chip_CPUusage/2, 0, 0))
    SELF:setBodygroup(14, Chip_EngineStatus == 1 | Chip_EngineStatus == 2)
    BRAKES:setBoneAngRelative(IDX_BONE_BRAKE, ang(Handbrake * 140, 0, 0))
    soundPlay(IDX_SOUND_HANDBRAKE, 2, CFG_Sound_Handbrake)
    SELF:setBodygroup(13, HighIdling)
    SELF:setBoneAngRelative(IDX_BONE_THROTTLE_WHEEL, ang(Notch*-12.5, 0, 0))
    SELF:setBoneAngRelative(IDX_BONE_SELECTOR, ang(Notch*-8.5, 0, 0))
    soundPlay(IDX_SOUND_SELECTOR_LEVER, 2, CFG_Sound_Selector_Notch)
    Throttler:setBoneAngRelative(IDX_BONE_THROTTLE_RELATIVE, ang(NotchXThrottle*-2 + OFFSET_BONE_NEEDLES, 0, 0))
    OPSS:setBoneAngRelative(IDX_BONE_OPS, ang(53-Chip_E2Ops * SCALAR_BONE_OPS, 0, 0))
    SELF:setBoneAngRelative(IDX_BONE_REVERSER, ang(Reverser*20, 0, 0))
    soundPlay(IDX_SOUND_REVERSER_LEVER, 2, Reverser == 0 ? CFG_Sound_Reverser_Neutral : CFG_Sound_Reverser_Engaged)
    MPHS:setBoneAngRelative(IDX_BONE_SPEED_MPH, ang(OFFSET_BONE_NEEDLES - (min(max(0, MPH - 2), 90) * SCALAR_MPH_TO_DEG), 0, 0))
    MPHS:setBoneAngRelative(IDX_BONE_SPEED_MPH_MAX, ang(OFFSET_BONE_NEEDLES - (min(max(0, MPH - 2), 90) * SCALAR_MPH_TO_DEG), 0, 0))
    Throttler:setBoneAngRelative(IDX_BONE_THROTTLE, ang(Throttle*-2 + OFFSET_BONE_NEEDLES, 0, 0))
    BonesSafe = 1
}


